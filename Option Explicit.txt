' Attribute VB_Name = "mod_BackOffice_InterestAmendments_Setup_V7"
Option Explicit

' --- Declarations and Constants (remain the same as _V6) ---
Public objReflectionApp As Object
Public objFrame As Object
Public objView As Object
Public objTerminal As Object
Public objScreen As Object

Private Const TARGET_SESSION_ID_PART As String = "NTS Back Office - Prod.rd3x" ' This will be used as sessionName
' ... (other constants)
Private Const SCRIPT_TITLE As String = "Back Office - TERM ALL Entry V7"

' --- Main Sub (calls _V7 connect) ---
Sub PerformTermAllEntry_V7()
    On Error GoTo ErrorHandler
    Dim success As Boolean

    success = ConnectAndActivateReflectionSession_V7(TARGET_SESSION_ID_PART) ' Pass the title part
    If Not success Then
        MsgBox "Failed to connect/activate Reflection session: '" & TARGET_SESSION_ID_PART & "'." & vbCrLf & _
               "Ensure session is open. Check Immediate Window for debug details.", vbCritical, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    ' ... (rest of PerformTermAllEntry remains the same, calling _V7 helpers) ...
    Debug.Print SCRIPT_TITLE & ": Successfully connected to and activated session: " & objView.TitleText

    success = NavigateToScreen_V7(SCREEN_APP_MENU, SCREEN_APP_MENU_ROW, SCREEN_APP_MENU_COL, SCREEN_APP_MENU_LENGTH, MAX_PAGEDOWN_ATTEMPTS)
    If Not success Then
        MsgBox "Failed to navigate to '" & SCREEN_APP_MENU & "'.", vbExclamation, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    Debug.Print SCRIPT_TITLE & ": Successfully navigated to: " & SCREEN_APP_MENU

    Call WaitHostSettle_V7(1000)
    objScreen.PutText2 CMD_TERM_ALL, CMD_TERM_ALL_ROW, CMD_TERM_ALL_COL
    Debug.Print SCRIPT_TITLE & ": Entered command: '" & CMD_TERM_ALL & "' at R" & CMD_TERM_ALL_ROW & "C" & CMD_TERM_ALL_COL
    
    objScreen.SendControlKey ControlKeyCode_Transmit
    Debug.Print SCRIPT_TITLE & ": Sent Transmit key."
    
    Call WaitHostSettle_V7(5000)
    MsgBox "'" & CMD_TERM_ALL & "' entered successfully.", vbInformation, SCRIPT_TITLE

CleanupAndExit:
    Set objScreen = Nothing
    Set objTerminal = Nothing
    Set objView = Nothing
    Set objFrame = Nothing
    Set objReflectionApp = Nothing
    Exit Sub
ErrorHandler:
    MsgBox "Error in '" & SCRIPT_TITLE & "':" & vbCrLf & Err.Number & ": " & Err.Description, vbCritical, SCRIPT_TITLE
    Resume CleanupAndExit
End Sub


' --- Helper Function: Connects and activates session (Version 7) ---
Private Function ConnectAndActivateReflectionSession_V7(ByVal targetSessionTitleOrUniquePart As String) As Boolean
    On Error GoTo ConnectErrorHandler
    ConnectAndActivateReflectionSession_V7 = False

    Dim method1Succeeded As Boolean: method1Succeeded = False

    Debug.Print "Connect_V7: Attempting Method 1: GetObject(""Reflection Workspace"")"
    On Error Resume Next
    Set objReflectionApp = GetObject("Reflection Workspace")
    If Err.Number = 0 And Not objReflectionApp Is Nothing Then
        method1Succeeded = True
        Debug.Print "Connect_V7: Method 1 SUCCEEDED setting objReflectionApp."
    Else
        ' Not attempting Methods 2 & 3 as they previously caused Error 429 for objReflectionApp
        Err.Clear
        Debug.Print "Connect_V7: Method 1 failed. This was our best hope. Cannot obtain Reflection Application object reliably."
        GoTo FinalConnectErrorHandling
    End If
    On Error GoTo ConnectErrorHandler

    If objReflectionApp Is Nothing Then Exit Function
    Debug.Print "Connect_V7: TypeName(objReflectionApp) is: " & TypeName(objReflectionApp) ' Should be ApplicationObject

    Set objFrame = objReflectionApp.GetObject("Frame")
    If objFrame Is Nothing Then Debug.Print "Connect_V7: Frame object is Nothing.": Exit Function
    Debug.Print "Connect_V7: objFrame is set. TypeName(objFrame) is: " & TypeName(objFrame) ' Should be Frame

    If Not objFrame.Visible Then objFrame.Visible = True
    objFrame.Activate
    Debug.Print "Connect_V7: Frame Visible/Activated."

    ' --- MODIFIED APPROACH: Try objFrame.GetViewByTitleText, like in your original working code ---
    Debug.Print "Connect_V7: Attempting objFrame.GetViewByTitleText(""" & targetSessionTitleOrUniquePart & """)..."
    On Error Resume Next ' Specifically for GetViewByTitleText
    Set objView = objFrame.GetViewByTitleText(targetSessionTitleOrUniquePart)
    If Err.Number <> 0 Or objView Is Nothing Then
        Err.Clear
        Debug.Print "Connect_V7: objFrame.GetViewByTitleText(""" & targetSessionTitleOrUniquePart & """) FAILED. Error: " & Err.Description
        Debug.Print "Connect_V7: The Frame object obtained does not support GetViewByTitleText or no such view found with this exact title/key."
        ' --- LAST DITCH: Try to get current/active screen if GetViewByTitleText fails ---
        Debug.Print "Connect_V7: Last ditch - attempting to get screen from objReflectionApp if it supports current terminal..."
        On Error Resume Next
        Set objScreen = objReflectionApp.CurrentTerminal.Screen ' Some older Reflection app objects might have this
        If Err.Number = 0 And Not objScreen Is Nothing Then
            ' We got a screen, but we don't have the objView or objTerminal properly. This is very limited.
            Debug.Print "Connect_V7: Got objScreen via objReflectionApp.CurrentTerminal.Screen. This is a limited connection."
            ' We'd need to set objTerminal too if possible, or accept limitations
            On Error Resume Next
            Set objTerminal = objReflectionApp.CurrentTerminal
            On Error GoTo ConnectErrorHandler
            ConnectAndActivateReflectionSession_V7 = True ' Partial success, enough to get a screen
            Exit Function
        Else
            Err.Clear
            Debug.Print "Connect_V7: objReflectionApp.CurrentTerminal.Screen also failed."
        End If
        On Error GoTo ConnectErrorHandler
        GoTo FinalConnectErrorHandling
    Else
        Debug.Print "Connect_V7: objFrame.GetViewByTitleText(""" & targetSessionTitleOrUniquePart & """) SUCCEEDED. View Title: '" & objView.TitleText & "'"
        ' objView is set, proceed to get terminal and screen
    End If
    On Error GoTo ConnectErrorHandler


    If objView Is Nothing Then
        Debug.Print "Connect_V7: objView is Nothing after all attempts."
        Exit Function
    End If

    objView.Activate
    Set objTerminal = objView.Control
    Set objScreen = objTerminal.Screen

    If objTerminal Is Nothing Or objScreen Is Nothing Then
        Debug.Print "Connect_V7: Failed to get Terminal/Screen from view '" & objView.TitleText & "'."
        Exit Function
    End If

    objTerminal.DisableKeystrokeProductivity = True
    objTerminal.DisableScreenHistory = True

    ConnectAndActivateReflectionSession_V7 = True
    Debug.Print "Connect_V7: Successfully targeted session '" & objView.TitleText & "' using GetViewByTitleText."
    Exit Function

FinalConnectErrorHandling:
    Debug.Print "Connect_V7: Unrecoverable error in obtaining Reflection objects."
    ConnectAndActivateReflectionSession_V7 = False
    If Err.Number = 0 Then Exit Function

ConnectErrorHandler:
    Debug.Print "Connect_V7: Error (captured by ConnectErrorHandler) - " & Err.Number & ": " & Err.Description
    ConnectAndActivateReflectionSession_V7 = False
End Function

' --- Helper Subs (_V7) ---
Private Sub WaitHostSettle_V7(Optional ByVal settleTimeoutMilliseconds As Long = 3000)
    If objScreen Is Nothing Then Debug.Print "WaitHostSettle_V7: objScreen is Nothing.": Exit Sub
    Dim startTime As Date: startTime = Now
    Do While objScreen.OIA.XStatus <> 0
        If DateDiff("s", startTime, Now) * 1000 > settleTimeoutMilliseconds Then
            Debug.Print "WaitHostSettle_V7: Timeout XStatus."
            Exit Do
        End If
        objScreen.WaitForHostSettle 100, 50: DoEvents
    Loop
    objScreen.WaitForHostSettle 500, 200
    Debug.Print "WaitHostSettle_V7: Screen ready (XStatus=" & objScreen.OIA.XStatus & ")."
End Sub

Private Function NavigateToScreen_V7(ByVal targetScreenText As String, _
                                  ByVal targetRow As Long, ByVal targetCol As Long, ByVal targetLength As Long, _
                                  ByVal maxAttempts As Integer) As Boolean
    On Error Resume Next
    NavigateToScreen_V7 = False
    If objScreen Is Nothing Then Debug.Print "Navigate_V7: objScreen is Nothing.": Exit Function

    Dim attempts As Integer, currentScreenContent As String
    For attempts = 1 To maxAttempts
        Call WaitHostSettle_V7(2000)
        currentScreenContent = Trim(objScreen.GetText(targetRow, targetCol, targetLength))
        Debug.Print "Navigate_V7: Attempt " & attempts & " - Text at R" & targetRow & "C" & targetCol & ": '" & currentScreenContent & "'"
        If UCase(currentScreenContent) = UCase(targetScreenText) Then
            NavigateToScreen_V7 = True: Exit Function
        End If
        If attempts < maxAttempts Then
            objScreen.SendControlKey ControlKeyCode_PageDown
            Debug.Print "Navigate_V7: Sent PageDown."
        End If
    Next attempts
    Debug.Print "Navigate_V7: Failed to reach '" & targetScreenText & "'."
End Function
