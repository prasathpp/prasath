Attribute VB_Name = "mod_BackOffice_InterestAmendments_Setup_V9"
Option Explicit

' --- Attachmate Reflection Object Declarations ---
Public objReflectionApp As Object
Public objFrame As Object
Public objView As Object
Public objTerminal As Object
Public objScreen As Object

' --- Constants for this specific automation ---
Private Const TARGET_SESSION_ID_PART As String = "NTS Back Office - Prod.rd3x"

Private Const SCREEN_APP_MENU As String = "APPLICATION SELECTION MENU"
Private Const SCREEN_APP_MENU_ROW As Long = 1
Private Const SCREEN_APP_MENU_COL As Long = 28
Private Const SCREEN_APP_MENU_LENGTH As Long = 30

Private Const CMD_TERM_ALL As String = "TERM ALL"
Private Const CMD_TERM_ALL_ROW As Long = 21
Private Const CMD_TERM_ALL_COL As Long = 13

Private Const MAX_NAVIGATION_ATTEMPTS As Integer = 10 ' Reduced for PA1, should be quick
Private Const SCRIPT_TITLE As String = "Back Office - TERM ALL Entry V9"


' --- Main Sub (calls _V9 connect and navigate) ---
Sub PerformTermAllEntry_V9()
    On Error GoTo ErrorHandler
    Dim success As Boolean

    success = ConnectAndActivateReflectionSession_V9(TARGET_SESSION_ID_PART)
    If Not success Then
        MsgBox "Failed to connect/activate Reflection session: '" & TARGET_SESSION_ID_PART & "'." & vbCrLf & _
               "Ensure session is open. Check Immediate Window for debug details.", vbCritical, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    
    If objScreen Is Nothing Then
        MsgBox "Critical error: Screen object (objScreen) was not set. Cannot proceed.", vbCritical, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    If objView Is Nothing And success Then ' Should not happen if success is true based on V9 connect logic
         MsgBox "Warning: objView was not set, but connection reported success.", vbExclamation, SCRIPT_TITLE
         Debug.Print SCRIPT_TITLE & ": Successfully connected, but objView is Nothing."
    ElseIf success Then
         Debug.Print SCRIPT_TITLE & ": Successfully connected. View Title: '" & objView.TitleText & "'"
    End If

    success = NavigateToScreen_V9(SCREEN_APP_MENU, SCREEN_APP_MENU_ROW, SCREEN_APP_MENU_COL, SCREEN_APP_MENU_LENGTH, MAX_NAVIGATION_ATTEMPTS)
    
    If Not success Then
        MsgBox "Failed to navigate to '" & SCREEN_APP_MENU & "'. Please check starting screen and that PA1 returns to this menu.", vbExclamation, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    Debug.Print SCRIPT_TITLE & ": Successfully navigated to: " & SCREEN_APP_MENU

    Call WaitHostSettle_V9(1000)
    objScreen.PutText2 CMD_TERM_ALL, CMD_TERM_ALL_ROW, CMD_TERM_ALL_COL
    Debug.Print SCRIPT_TITLE & ": Entered command: '" & CMD_TERM_ALL & "' at R" & CMD_TERM_ALL_ROW & "C" & CMD_TERM_ALL_COL
    
    objScreen.SendControlKey ControlKeyCode_Transmit
    Debug.Print SCRIPT_TITLE & ": Sent Transmit key."
    
    Call WaitHostSettle_V9(5000) ' Wait for screen to update after TERM ALL
    ' Add a check here for the next expected screen if possible
    MsgBox "'" & CMD_TERM_ALL & "' entered successfully on '" & SCREEN_APP_MENU & "'.", vbInformation, SCRIPT_TITLE

CleanupAndExit:
    Set objScreen = Nothing
    Set objTerminal = Nothing
    Set objView = Nothing
    Set objFrame = Nothing
    Set objReflectionApp = Nothing
    Exit Sub
ErrorHandler:
    MsgBox "Error in '" & SCRIPT_TITLE & "':" & vbCrLf & Err.Number & ": " & Err.Description, vbCritical, SCRIPT_TITLE
    Resume CleanupAndExit
End Sub


' --- Helper Function: Connects and activates session (Version 9) ---
Private Function ConnectAndActivateReflectionSession_V9(ByVal targetSessionTitleOrUniquePart As String) As Boolean
    On Error GoTo ConnectErrorHandler
    ConnectAndActivateReflectionSession_V9 = False

    Debug.Print "Connect_V9: Attempting Method 1: GetObject(""Reflection Workspace"")"
    On Error Resume Next
    Set objReflectionApp = GetObject("Reflection Workspace")
    If Err.Number <> 0 Or objReflectionApp Is Nothing Then
        Err.Clear
        Debug.Print "Connect_V9: Method 1 (GetObject(""Reflection Workspace"")) FAILED."
        GoTo FinalConnectErrorHandling
    End If
    Debug.Print "Connect_V9: Method 1 SUCCEEDED. TypeName(objReflectionApp): " & TypeName(objReflectionApp)
    On Error GoTo ConnectErrorHandler 

    Set objFrame = objReflectionApp.GetObject("Frame")
    If objFrame Is Nothing Then Debug.Print "Connect_V9: Frame object is Nothing.": Exit Function
    Debug.Print "Connect_V9: objFrame set. TypeName(objFrame): " & TypeName(objFrame)

    If Not objFrame.Visible Then objFrame.Visible = True
    objFrame.Activate
    Debug.Print "Connect_V9: Frame Visible/Activated."

    Debug.Print "Connect_V9: Attempting objFrame.GetViewByTitleText(""" & targetSessionTitleOrUniquePart & """)..."
    On Error Resume Next
    Set objView = objFrame.GetViewByTitleText(targetSessionTitleOrUniquePart)
    If Err.Number <> 0 Or objView Is Nothing Then
        Err.Clear
        Debug.Print "Connect_V9: objFrame.GetViewByTitleText FAILED. Error: " & Err.Description
        GoTo FinalConnectErrorHandling 
    End If
    Debug.Print "Connect_V9: objFrame.GetViewByTitleText SUCCEEDED. View Title: '" & objView.TitleText & "'. TypeName(objView): " & TypeName(objView)
    On Error GoTo ConnectErrorHandler 
    
    ' objView.Activate previously caused Error 438.
    ' If the view was obtained by GetViewByTitleText and frame was activated, it might already be the 'active' one.
    ' We will skip explicit objView.Activate for now.
    
    Set objTerminal = objView.Control
    If objTerminal Is Nothing Then Debug.Print "Connect_V9: objTerminal is Nothing.": GoTo FinalConnectErrorHandling
    Debug.Print "Connect_V9: objTerminal set. TypeName(objTerminal): " & TypeName(objTerminal)
    
    Set objScreen = objTerminal.Screen
    If objScreen Is Nothing Then Debug.Print "Connect_V9: objScreen is Nothing.": GoTo FinalConnectErrorHandling
    Debug.Print "Connect_V9: objScreen set. TypeName(objScreen): " & TypeName(objScreen)
    
    On Error Resume Next 
    objTerminal.DisableKeystrokeProductivity = True
    If Err.Number <> 0 Then Debug.Print "Connect_V9: Info - Error on DisableKeystrokeProductivity. " & Err.Number & ": " & Err.Description: Err.Clear
    objTerminal.DisableScreenHistory = True
    If Err.Number <> 0 Then Debug.Print "Connect_V9: Info - Error on DisableScreenHistory. " & Err.Number & ": " & Err.Description: Err.Clear
    On Error GoTo ConnectErrorHandler

    ConnectAndActivateReflectionSession_V9 = True
    Debug.Print "Connect_V9: Successfully fully initialized session '" & objView.TitleText & "'."
    Exit Function

FinalConnectErrorHandling:
    Debug.Print "Connect_V9: Unrecoverable error point reached in function."
    ConnectAndActivateReflectionSession_V9 = False
    If Err.Number = 0 Then Exit Function

ConnectErrorHandler:
    Debug.Print "Connect_V9: Error (captured by ConnectErrorHandler) - " & Err.Number & ": " & Err.Description
    ConnectAndActivateReflectionSession_V9 = False
End Function

' --- Helper Sub (_V9) ---
Private Sub WaitHostSettle_V9(Optional ByVal settleTimeoutMilliseconds As Long = 3000)
    If objScreen Is Nothing Then Debug.Print "WaitHostSettle_V9: objScreen is Nothing.": Exit Sub
    Dim startTime As Date: startTime = Now
    Do While objScreen.OIA.XStatus <> 0
        If DateDiff("s", startTime, Now) * 1000 > settleTimeoutMilliseconds Then
            Debug.Print "WaitHostSettle_V9: Timeout XStatus."
            Exit Do
        End If
        objScreen.WaitForHostSettle 100, 50: DoEvents
    Loop
    objScreen.WaitForHostSettle 500, 200
    Debug.Print "WaitHostSettle_V9: Screen ready (XStatus=" & objScreen.OIA.XStatus & ")."
End Sub

' --- Helper Function: Navigates to screen (Version 9 - Using PA1 Key) ---
Private Function NavigateToScreen_V9(ByVal targetScreenText As String, _
                                  ByVal targetRow As Long, ByVal targetCol As Long, ByVal targetLength As Long, _
                                  ByVal maxAttempts As Integer) As Boolean
    On Error Resume Next 
    NavigateToScreen_V9 = False
    If objScreen Is Nothing Then Debug.Print "Navigate_V9: objScreen is Nothing.": Exit Function

    Dim attempts As Integer, currentScreenContent As String
    Dim navigationKey As Long

    ' **** USING PA1 KEY as determined from screen shot ****
    navigationKey = ControlKeyCode_Pa1

    Debug.Print "Navigate_V9: Will attempt navigation using key code: " & navigationKey & " (PA1=" & ControlKeyCode_Pa1 & ")"

    For attempts = 1 To maxAttempts
        Call WaitHostSettle_V9(2000) 
        currentScreenContent = Trim(objScreen.GetText(targetRow, targetCol, targetLength))
        Debug.Print "Navigate_V9: Attempt " & attempts & " - Current screen text at R" & targetRow & "C" & targetCol & "L" & targetLength & ": '" & currentScreenContent & "'"
        
        If UCase(currentScreenContent) = UCase(targetScreenText) Then
            NavigateToScreen_V9 = True
            Exit Function 
        End If
        
        If attempts < maxAttempts Then
            objScreen.SendControlKey navigationKey ' Use PA1
            Debug.Print "Navigate_V9: Sent key code: " & navigationKey
        Else
            Debug.Print "Navigate_V9: Max attempts reached. Current text: '" & currentScreenContent & "'."
        End If
    Next attempts
    Debug.Print "Navigate_V9: Failed to reach '" & targetScreenText & "' after " & maxAttempts & " attempts using key " & navigationKey & "."
End Function
