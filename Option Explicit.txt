' Attribute VB_Name = "mod_BackOffice_InterestAmendments_Setup_V3"
Option Explicit

' --- Attachmate Reflection Object Declarations ---
Public objReflectionApp As Object ' ReflectionWorkspace.Application
Public objFrame As Object         ' Attachmate_Reflection_Objects.Frame
Public objView As Object          ' Attachmate_Reflection_Objects.View
Public objTerminal As Object      ' Attachmate_Reflection_Objects_Emulation_IbmHosts.ibmTerminal
Public objScreen As Object        ' Attachmate_Reflection_Objects_Emulation_IbmHosts.IbmScreen

' --- Constants for this specific automation ---
Private Const TARGET_SESSION_ID_PART As String = "NTS Back Office - Prod.rd3x"
Private Const SCREEN_APP_MENU As String = "APPLICATION SELECTION MENU"
Private Const SCREEN_APP_MENU_ROW As Long = 1
Private Const SCREEN_APP_MENU_COL As Long = 28
Private Const SCREEN_APP_MENU_LENGTH As Long = 30

Private Const CMD_TERM_ALL As String = "TERM ALL"
Private Const CMD_TERM_ALL_ROW As Long = 21
Private Const CMD_TERM_ALL_COL As Long = 13

Private Const MAX_PAGEDOWN_ATTEMPTS As Integer = 10
Private Const SCRIPT_TITLE As String = "Back Office - TERM ALL Entry"

' --- Main Entry Point ---
Sub PerformTermAllEntry_V3()
    On Error GoTo ErrorHandler
    Dim success As Boolean

    success = ConnectAndActivateReflectionSession_V3(TARGET_SESSION_ID_PART)
    If Not success Then
        MsgBox "Failed to connect/activate Reflection session: '" & TARGET_SESSION_ID_PART & "'." & vbCrLf & _
               "Ensure session is open and try the connection method that works in your other modules.", vbCritical, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    Debug.Print "Successfully connected to and activated session: " & objView.TitleText

    success = NavigateToScreen_V3(SCREEN_APP_MENU, SCREEN_APP_MENU_ROW, SCREEN_APP_MENU_COL, SCREEN_APP_MENU_LENGTH, MAX_PAGEDOWN_ATTEMPTS)
    If Not success Then
        MsgBox "Failed to navigate to '" & SCREEN_APP_MENU & "'.", vbExclamation, SCRIPT_TITLE
        GoTo CleanupAndExit
    End If
    Debug.Print "Successfully navigated to: " & SCREEN_APP_MENU

    Call WaitHostSettle_V3(1000)
    objScreen.PutText2 CMD_TERM_ALL, CMD_TERM_ALL_ROW, CMD_TERM_ALL_COL
    Debug.Print "Entered command: '" & CMD_TERM_ALL & "' at R" & CMD_TERM_ALL_ROW & "C" & CMD_TERM_ALL_COL
    
    objScreen.SendControlKey ControlKeyCode_Transmit
    Debug.Print "Sent Transmit key."
    
    Call WaitHostSettle_V3(5000)
    MsgBox "'" & CMD_TERM_ALL & "' entered successfully.", vbInformation, SCRIPT_TITLE

CleanupAndExit:
    Set objScreen = Nothing
    Set objTerminal = Nothing
    Set objView = Nothing
    Set objFrame = Nothing
    Set objReflectionApp = Nothing
    Exit Sub
ErrorHandler:
    MsgBox "Error in '" & SCRIPT_TITLE & "':" & vbCrLf & Err.Number & ": " & Err.Description, vbCritical, SCRIPT_TITLE
    Resume CleanupAndExit
End Sub

' --- Helper Function: Connects and activates session (Version 3) ---
Private Function ConnectAndActivateReflectionSession_V3(ByVal uniquePartOfSessionTitle As String) As Boolean
    On Error GoTo ConnectErrorHandler
    ConnectAndActivateReflectionSession_V3 = False

    Dim tempView As Object
    Dim foundView As Boolean

    ' --- TRY METHOD 1: From your working mod_PEVE_ReflectionCommon ---
    Debug.Print "Connect_V3: Attempting Method 1: GetObject(""Reflection Workspace"")"
    On Error Resume Next ' Allow this specific attempt to fail gracefully
    Set objReflectionApp = GetObject("Reflection Workspace")
    If Err.Number <> 0 Or objReflectionApp Is Nothing Then
        Err.Clear
        Debug.Print "Connect_V3: Method 1 failed or returned Nothing. Trying Method 2..."
        ' --- TRY METHOD 2: Standard GetObject/CreateObject for "ReflectionWorkspace.Application" ---
        Set objReflectionApp = GetObject(, "ReflectionWorkspace.Application")
        If Err.Number <> 0 Or objReflectionApp Is Nothing Then
            Err.Clear
            Debug.Print "Connect_V3: Method 2 (GetObject) failed. Trying Method 3 (CreateObject)..."
            Set objReflectionApp = CreateObject("ReflectionWorkspace.Application")
            If Err.Number <> 0 Or objReflectionApp Is Nothing Then
                Err.Clear
                Debug.Print "Connect_V3: Method 3 (CreateObject) also failed. Cannot obtain Reflection Application object."
                GoTo ConnectErrorHandler ' Jump to main error handler for this function
            Else
                Debug.Print "Connect_V3: Method 3 (CreateObject) SUCCEEDED."
            End If
        Else
            Debug.Print "Connect_V3: Method 2 (GetObject) SUCCEEDED."
        End If
    Else
        Debug.Print "Connect_V3: Method 1 (GetObject(""Reflection Workspace"")) SUCCEEDED."
    End If
    On Error GoTo ConnectErrorHandler ' Re-enable the main error handler for the rest of the function

    ' At this point, objReflectionApp should be set if any method worked
    If objReflectionApp Is Nothing Then
        Debug.Print "Connect_V3: All methods to get objReflectionApp failed."
        Exit Function ' Should have been caught by error handler, but as a safeguard
    End If

    Do While objReflectionApp.IsInitialized = False
        objReflectionApp.Wait 200
    Loop

    Set objFrame = objReflectionApp.GetObject("Frame")
    If objFrame Is Nothing Then
        Debug.Print "Connect_V3: Reflection Frame object not found."
        Exit Function
    End If

    If Not objFrame.Visible Then objFrame.Visible = True
    objFrame.Activate

    foundView = False
    If objFrame.Views.Count > 0 Then
        Debug.Print "Connect_V3: Searching for session containing '" & uniquePartOfSessionTitle & "'..."
        For Each tempView In objFrame.Views
            Debug.Print "Connect_V3: Checking view - '" & tempView.TitleText & "'"
            If InStr(1, tempView.TitleText, uniquePartOfSessionTitle, vbTextCompare) > 0 Then
                Set objView = tempView
                foundView = True
                Exit For
            End If
        Next tempView
    Else
        Debug.Print "Connect_V3: No views are currently open."
    End If

    If Not foundView Or objView Is Nothing Then
        Debug.Print "Connect_V3: Session containing '" & uniquePartOfSessionTitle & "' not found."
        Exit Function
    End If

    objView.Activate
    Set objTerminal = objView.Control
    Set objScreen = objTerminal.Screen

    If objTerminal Is Nothing Or objScreen Is Nothing Then
        Debug.Print "Connect_V3: Failed to get Terminal/Screen from view '" & objView.TitleText & "'."
        Exit Function
    End If

    objTerminal.DisableKeystrokeProductivity = True
    objTerminal.DisableScreenHistory = True

    ConnectAndActivateReflectionSession_V3 = True
    Debug.Print "Connect_V3: Successfully connected to '" & objView.TitleText & "'."
    Exit Function

ConnectErrorHandler:
    Debug.Print "Connect_V3: Error - " & Err.Number & ": " & Err.Description
    ConnectAndActivateReflectionSession_V3 = False
End Function

' --- Helper Sub: Waits for host screen to settle (Version 3) ---
Private Sub WaitHostSettle_V3(Optional ByVal settleTimeoutMilliseconds As Long = 3000)
    If objScreen Is Nothing Then Debug.Print "WaitHostSettle_V3: objScreen is Nothing.": Exit Sub
    Dim startTime As Date: startTime = Now
    Do While objScreen.OIA.XStatus <> 0
        If DateDiff("s", startTime, Now) * 1000 > settleTimeoutMilliseconds Then
            Debug.Print "WaitHostSettle_V3: Timeout XStatus."
            Exit Do
        End If
        objScreen.WaitForHostSettle 100, 50: DoEvents
    Loop
    objScreen.WaitForHostSettle 500, 200
    Debug.Print "WaitHostSettle_V3: Screen ready (XStatus=" & objScreen.OIA.XStatus & ")."
End Sub

' --- Helper Function: Navigates to screen (Version 3) ---
Private Function NavigateToScreen_V3(ByVal targetScreenText As String, _
                                  ByVal targetRow As Long, ByVal targetCol As Long, ByVal targetLength As Long, _
                                  ByVal maxAttempts As Integer) As Boolean
    On Error Resume Next
    NavigateToScreen_V3 = False
    If objScreen Is Nothing Then Debug.Print "Navigate_V3: objScreen is Nothing.": Exit Function

    Dim attempts As Integer, currentScreenContent As String
    For attempts = 1 To maxAttempts
        Call WaitHostSettle_V3(2000)
        currentScreenContent = Trim(objScreen.GetText(targetRow, targetCol, targetLength))
        Debug.Print "Navigate_V3: Attempt " & attempts & " - Text at R" & targetRow & "C" & targetCol & ": '" & currentScreenContent & "'"
        If UCase(currentScreenContent) = UCase(targetScreenText) Then
            NavigateToScreen_V3 = True: Exit Function
        End If
        If attempts < maxAttempts Then
            objScreen.SendControlKey ControlKeyCode_PageDown
            Debug.Print "Navigate_V3: Sent PageDown."
        End If
    Next attempts
    Debug.Print "Navigate_V3: Failed to reach '" & targetScreenText & "'."
End Function
