Attribute VB_Name = "mod_ProcessInterestAmendments_Integrated"
Option Explicit

' --- Constants for Screen Titles (ensure these match exactly what Validate_Screen expects) ---
Private Const SCREEN_APP_MENU As String = "APPLICATION SELECTION MENU"
Private Const SCREEN_RBS_WELCOME As String = "ROYAL BANK OF SCOTLAND"
Private Const SCREEN_OPT_HANDLER As String = "OPTION HANDLER FUNCTION SCREEN" ' Main text part for Validate_Screen
Private Const SCREEN_BO_SYSTEM As String = "BACK OFFICE SYSTEM"
Private Const SCREEN_MASTER_INDEX As String = "MASTER INDEX"
Private Const SCREEN_FILE_MAINT_IDX As String = "FILE MAINTENANCE INPUT INDEX"
Private Const SCREEN_INTERNAL_TXNS As String = "INTERNAL TRANSACTIONS"
Private Const SCREEN_INTEREST_AMENDMENTS As String = "INTEREST AMENDMENTS"

' --- Input Field Coordinates ---
Private Const ROW_CMD_LINE As Long = 21
Private Const COL_CMD_LINE As Long = 13
Private Const ROW_OPT_HANDLER_INPUT As Long = 21
Private Const COL_OPT_HANDLER_INPUT As Long = 16
Private Const ROW_BO_SYSTEM_INPUT As Long = 22
Private Const COL_BO_SYSTEM_INPUT As Long = 16
Private Const ROW_MASTER_IDX_ACTION As Long = 22
Private Const COL_MASTER_IDX_ACTION As Long = 8
Private Const ROW_MASTER_IDX_SC As Long = 22
Private Const COL_MASTER_IDX_SC As Long = 74
Private Const ROW_FILEMAINT_IDX_ACTION As Long = 22
Private Const COL_FILEMAINT_IDX_ACTION As Long = 8
Private Const ROW_FILEMAINT_IDX_ACC As Long = 22
Private Const COL_FILEMAINT_IDX_ACC As Long = 21
Private Const ROW_INTERNALTXN_ACTION As Long = 22
Private Const COL_INTERNALTXN_ACTION As Long = 8

Private Const SCRIPT_PROCESS_TITLE As String = "Interest Amendment V-Integrated"
' Public strAppName As String ' If your Validate_Screen uses this for MsgBox, ensure it's set globally

' --- Main Sub to Loop Through Excel Data ---
Sub ProcessAllInterestAmendmentsFromSheet()
    Dim ws As Worksheet
    Dim i As Long ' Current row in Excel
    Dim lastRow As Long
    Dim processStatus As String
    Dim criticalErrorEncountered As Boolean

    criticalErrorEncountered = False
    ' strAppName = "Interest Amendment Tool" ' Example if you need to set it

    ' --- Ensure Connection ---
    If obScreen Is Nothing Then ' obScreen should be Public from mod_PEVE_ReflectionCommon
        Debug.Print "ProcessAll...: obScreen is Nothing. Calling ConnectExtra."
        On Error Resume Next
        Call ConnectExtra ' From mod_PEVE_ReflectionCommon
        If Err.Number <> 0 Or obScreen Is Nothing Then
            MsgBox "Failed to connect to Reflection via ConnectExtra.", vbCritical, SCRIPT_PROCESS_TITLE
            Exit Sub
        End If
        On Error GoTo 0
    Else
        Debug.Print "ProcessAll...: Reflection connection already active."
    End If

    On Error Resume Next
    Set ws = ThisWorkbook.ActiveSheet ' Or specify: ThisWorkbook.Worksheets("YourSheetName")
    If ws Is Nothing Then
        MsgBox "Could not set worksheet. Ensure a sheet is active.", vbCritical, SCRIPT_PROCESS_TITLE
        Exit Sub
    End If
    On Error GoTo 0
    Debug.Print "Processing data from sheet: " & ws.Name

    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    If lastRow < 2 Then
        MsgBox "No data in sheet (Column A, starting row 2).", vbInformation, SCRIPT_PROCESS_TITLE
        Exit Sub
    End If
    Debug.Print "Data found from row 2 to " & lastRow

    For i = 2 To lastRow
        Debug.Print vbCrLf & "--- Processing Excel Row " & i & " ---"
        processStatus = PerformAmendmentForOneAccount(ws, i)
        
        ws.Cells(i, "H").Value = processStatus ' Update status in Column H
        
        If processStatus = "STOPPED_CRITICAL_ERROR" Or processStatus = "Error - Not on App Menu" Then
            criticalErrorEncountered = True
            MsgBox "Critical error on row " & i & ". Aborting. Status: " & processStatus, vbCritical, SCRIPT_PROCESS_TITLE
            Exit For
        End If
    Next i

    If criticalErrorEncountered Then
        Debug.Print "Processing stopped due to critical error."
    Else
        MsgBox "Finished processing all rows.", vbInformation, SCRIPT_PROCESS_TITLE
    End If
End Sub

' --- Function to Process a Single Account from Excel ---
Private Function PerformAmendmentForOneAccount(ByVal dataSheet As Worksheet, ByVal currentRow As Long) As String
    Dim sortCode As String
    Dim accountNumber As String
    Dim brand As String
    Dim confirmCode As String
    Dim l_loop As Long

    PerformAmendmentForOneAccount = "Unknown Error"

    sortCode = Trim(CStr(dataSheet.Cells(currentRow, "A").Value))
    accountNumber = Trim(CStr(dataSheet.Cells(currentRow, "B").Value))
    brand = UCase(Trim(CStr(dataSheet.Cells(currentRow, "C").Value)))

    If sortCode = "" Or accountNumber = "" Or brand = "" Then
        Debug.Print "Row " & currentRow & ": Skipped - Missing S/C, A/N, or Brand."
        PerformAmendmentForOneAccount = "Skipped - Missing Data"
        Exit Function
    End If
    Debug.Print "Data: S/C=" & sortCode & ", A/N=" & accountNumber & ", Brand=" & brand

    Select Case brand
        Case "RBS", "RBG", "RBI", "VIR": confirmCode = "PRCIR#T#"
        Case "NWB", "CTS", "NWO", "IOM": confirmCode = "PRCIN#T#"
        Case "UBN": confirmCode = "PRCIJ#T#"
        Case "UBR": confirmCode = "PRCIK#T#"
        Case Else
            Debug.Print "Row " & currentRow & ": Invalid Brand '" & brand & "'."
            PerformAmendmentForOneAccount = "Skipped - Invalid Brand"
            Exit Function
    End Select
    Debug.Print "Using confirm code: " & confirmCode

    Call WaitForScreen ' Uses your common function
    obScreen.WaitForHostSettle 200, 100

    ' Validate_Screen parameters: Text, Row, Col, Length
    If Validate_Screen(SCREEN_APP_MENU, 1, 28, Len(SCREEN_APP_MENU)) <> True Then
        Debug.Print "Row " & currentRow & ": Not on " & SCREEN_APP_MENU & ". Current: '" & Trim(obScreen.GetText(1, 28, Len(SCREEN_APP_MENU))) & "'"
        PerformAmendmentForOneAccount = "Error - Not on App Menu"
        Exit Function
    End If
    Debug.Print "On: " & SCREEN_APP_MENU

    objScreen.PutText2 "TERM ALL", ROW_CMD_LINE, COL_CMD_LINE
    objScreen.SendControlKey ControlKeyCode_Transmit
    Call WaitForScreen
    Debug.Print "Sent: TERM ALL"

    objScreen.PutText2 confirmCode, ROW_CMD_LINE, COL_CMD_LINE
    objScreen.SendControlKey ControlKeyCode_Transmit
    Call WaitForScreen
    Debug.Print "Sent: " & confirmCode
    obScreen.WaitForHostSettle 500, 200
    
    If Validate_Screen("Command not recognized", 20, 36, 22) = True Then
        Debug.Print "Row " & currentRow & ": Brand code " & confirmCode & " not recognized."
        PerformAmendmentForOneAccount = "Error - Brand Code Invalid"
        Exit Function
    End If

    If Validate_Screen(SCREEN_RBS_WELCOME, 1, 1, Len(SCREEN_RBS_WELCOME)) = True Then
        Debug.Print "On: " & SCREEN_RBS_WELCOME & " - sending Transmit."
        objScreen.SendControlKey ControlKeyCode_Transmit
        Call WaitForScreen: obScreen.WaitForHostSettle 200, 100
        
        If Validate_Screen("", 1, 1, 80) = True Then
            Debug.Print "Attempting STAR loop..."
            l_loop = 1
            Do
                If Validate_Screen("", 1, 1, 80) = True Then
                    objScreen.PutText2 "STAR", 1, 1
                    objScreen.SendControlKey ControlKeyCode_Transmit
                    Call WaitForScreen: obScreen.WaitForHostSettle 200, 100
                    Debug.Print "Sent: STAR (Loop " & l_loop & ")"
                ElseIf Validate_Screen(SCREEN_RBS_WELCOME, 1, 1, Len(SCREEN_RBS_WELCOME)) = True Then
                    objScreen.SendControlKey ControlKeyCode_Transmit
                    Call WaitForScreen: obScreen.WaitForHostSettle 200, 100
                    Debug.Print "Resent Transmit on RBS Welcome (Loop " & l_loop & ")"
                End If
                l_loop = l_loop + 1
                If l_loop > 5 Then
                    Debug.Print "Row " & currentRow & ": Stuck in STAR loop."
                    PerformAmendmentForOneAccount = "Error - STAR Loop Stuck"
                    Exit Function
                End If
            ' Your original InterestCheck used R1,C26,L35 for Opt Handler. Screenshot 2 has title at R2,C28.
            ' Using your InterestCheck parameters for Validate_Screen here.
            Loop While Validate_Screen(SCREEN_OPT_HANDLER, 1, 26, 35) = False And l_loop <= 5
        End If
    End If
    
    ' Option Handler Screen: Your InterestCheck used R1,C26,L35.
    If Validate_Screen(SCREEN_OPT_HANDLER, 1, 26, 35) <> True Then
        Debug.Print "Row " & currentRow & ": Not on " & SCREEN_OPT_HANDLER & ". Found: '" & Trim(obScreen.GetText(1, 26, 35)) & "'"
        PerformAmendmentForOneAccount = "Error - Not on Opt Handler"
        Exit Function
    End If
    Debug.Print "On: " & SCREEN_OPT_HANDLER

    objScreen.PutText2 "19", ROW_OPT_HANDLER_INPUT, COL_OPT_HANDLER_INPUT
    objScreen.SendControlKey ControlKeyCode_Transmit: Call WaitForScreen
    Debug.Print "Sent: Option 19"

    ' Back Office System: Your InterestCheck used R1,C7,L20.
    If Validate_Screen(SCREEN_BO_SYSTEM, 1, 7, Len(SCREEN_BO_SYSTEM)) <> True Then
        Debug.Print "Row " & currentRow & ": Not on " & SCREEN_BO_SYSTEM & ". Found: " & Trim(obScreen.GetText(1, 7, Len(SCREEN_BO_SYSTEM)))
        PerformAmendmentForOneAccount = "Error - Not on BO System"
        Exit Function
    End If
    Debug.Print "On: " & SCREEN_BO_SYSTEM
    
    objScreen.PutText2 "01", ROW_BO_SYSTEM_INPUT, COL_BO_SYSTEM_INPUT
    objScreen.SendControlKey ControlKeyCode_Transmit: Call WaitForScreen
    Debug.Print "Sent: Option 01"

    ' Master Index: Your InterestCheck used R1,C28,L12. Len(SCREEN_MASTER_INDEX) is 12.
    If Validate_Screen(SCREEN_MASTER_INDEX, 1, 28, Len(SCREEN_MASTER_INDEX)) <> True Then
        Debug.Print "Row " & currentRow & ": Not on " & SCREEN_MASTER_INDEX & ". Found: " & Trim(obScreen.GetText(1, 28, Len(SCREEN_MASTER_INDEX)))
        PerformAmendmentForOneAccount = "Error - Not on Master Index"
        Exit Function
    End If
    Debug.Print "On: " & SCREEN_MASTER_INDEX

    objScreen.PutText2 "20", ROW_MASTER_IDX_ACTION, COL_MASTER_IDX_ACTION
    objScreen.PutText2 Format(sortCode, "000000"), ROW_MASTER_IDX_SC, COL_MASTER_IDX_SC
    objScreen.SendControlKey ControlKeyCode_Transmit: Call WaitForScreen
    Debug.Print "Sent: Action 20, S/C " & sortCode

    ' File Maintenance Input Index: Your InterestCheck used R1,C21,L40. Len(SCREEN_FILE_MAINT_IDX) is 28.
    If Validate_Screen(SCREEN_FILE_MAINT_IDX, 1, 21, Len(SCREEN_FILE_MAINT_IDX)) <> True Then
        Debug.Print "Row " & currentRow & ": Not on " & SCREEN_FILE_MAINT_IDX & ". Found: " & Trim(obScreen.GetText(1, 21, Len(SCREEN_FILE_MAINT_IDX)))
        PerformAmendmentForOneAccount = "Error - Not on File Maint Idx"
        Exit Function
    End If
    Debug.Print "On: " & SCREEN_FILE_MAINT_IDX

    objScreen.PutText2 "20", ROW_FILEMAINT_IDX_ACTION, COL_FILEMAINT_IDX_ACTION
    objScreen.PutText2 Format(accountNumber, "00000000"), ROW_FILEMAINT_IDX_ACC, COL_FILEMAINT_IDX_ACC
    objScreen.SendControlKey ControlKeyCode_Transmit: Call WaitForScreen
    Debug.Print "Sent: Action 20, A/N " & accountNumber

    ' Internal Transactions: Using your specified R1,C19. Len(SCREEN_INTERNAL_TXNS) is 20.
    If Validate_Screen(SCREEN_INTERNAL_TXNS, 1, 19, Len(SCREEN_INTERNAL_TXNS)) <> True Then
        Debug.Print "Row " & currentRow & ": Not on " & SCREEN_INTERNAL_TXNS & ". Found: " & Trim(obScreen.GetText(1, 19, Len(SCREEN_INTERNAL_TXNS)))
        PerformAmendmentForOneAccount = "Error - Not on Internal Txns"
        Exit Function
    End If
    Debug.Print "On: " & SCREEN_INTERNAL_TXNS

    objScreen.PutText2 "04", ROW_INTERNALTXN_ACTION, COL_INTERNALTXN_ACTION
    objScreen.SendControlKey ControlKeyCode_Transmit: Call WaitForScreen
    Debug.Print "Sent: Action 04"

    ' Interest Amendments Screen: Using estimate R1,C30. Len(SCREEN_INTEREST_AMENDMENTS) is 19.
    If Validate_Screen(SCREEN_INTEREST_AMENDMENTS, 1, 30, Len(SCREEN_INTEREST_AMENDMENTS)) <> True Then
        If Validate_Screen("INTEREST DETAILS", 2, 30, Len("INTEREST DETAILS")) <> True Then 
            Debug.Print "Row " & currentRow & ": Not on " & SCREEN_INTEREST_AMENDMENTS & ". Found: " & Trim(obScreen.GetText(1, 30, Len(SCREEN_INTEREST_AMENDMENTS)))
            PerformAmendmentForOneAccount = "Error - Not on Interest Amend Screen"
            Exit Function
        End If
    End If
    Debug.Print "Successfully navigated to: " & SCREEN_INTEREST_AMENDMENTS
    navigationSuccessful = True

    If navigationSuccessful Then
        Debug.Print "Row " & currentRow & ": On Interest Amendments screen. Pausing..."
        MsgBox "SCRIPT PAUSED." & vbCrLf & "Verify INTEREST AMENDMENTS screen for:" & vbCrLf & _
               "S/C: " & sortCode & ", A/N: " & accountNumber & vbCrLf & vbCrLf & _
               "Click OK to simulate completion and proceed.", vbInformation, SCRIPT_PROCESS_TITLE
        PerformAmendmentForOneAccount = "Navigated - Manual Checkpoint"
    Else
        PerformAmendmentForOneAccount = "Navigation Failed Critically"
    End If
End Function
