Sub SplitDataIntoMultipleWorkbooks()
    Dim ws As Worksheet
    Dim wb As Workbook
    Dim headerRange As Range
    Dim totalRows As Long, rowsPerWorkbook As Long, extraRows As Long
    Dim startRow As Long, endRow As Long
    Dim splitCount As Long, numberOfSplits As Long
    Dim savePath As String
    Dim fileName As String
    Dim splitFileName As String

    ' Set the active worksheet (current active sheet in the active workbook)
    Set ws = ActiveSheet

    ' Get the total number of rows of data, assuming the first row contains headers
    totalRows = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row

    ' Check if there's enough data to split (at least one row of data plus header)
    If totalRows <= 1 Then
        MsgBox "Not enough data to split. Please ensure your data has multiple rows.", vbExclamation
        Exit Sub
    End If

    ' Prompt user to input the number of splits
    numberOfSplits = InputBox("Enter the number of parts you want to split the data into:", "Split Data")

    ' Validate the user input for number of splits
    If Not IsNumeric(numberOfSplits) Or numberOfSplits <= 0 Then
        MsgBox "Invalid input. Please enter a positive number greater than zero.", vbExclamation
        Exit Sub
    End If

    ' Define the header range (assuming headers are in the first row)
    Set headerRange = ws.Rows(1)

    ' Calculate rows per workbook and extra rows if any (excluding header)
    rowsPerWorkbook = (totalRows - 1) \ numberOfSplits ' Determine rows per workbook
    extraRows = (totalRows - 1) Mod numberOfSplits      ' Determine leftover rows

    ' Check if rowsPerWorkbook is zero, which would cause issues
    If rowsPerWorkbook = 0 Then
        MsgBox "Not enough rows to split across " & numberOfSplits & " workbooks. There must be more data.", vbExclamation
        Exit Sub
    End If

    ' If rowsPerWorkbook is valid, proceed with the split
    startRow = 2 ' Data starts from row 2 (excluding the header)

    ' Define the save path for the files
    savePath = "Z:\Business Unit Team Management\Chargebacks\8. Interest & Charges (Chargebacks) (LD1700 Active+6 years)-Classification Internal & Confidential\Chennai\3.0 India\4. Work Allocation\2025\DRS Automation Files\May\"
    
    ' Check if the directory path exists, if not, show a message and exit
    If Dir(savePath, vbDirectory) = "" Then
        MsgBox "The specified directory path does not exist: " & savePath, vbExclamation
        Exit Sub
    End If

    ' Get the base file name of the active workbook (without extension)
    fileName = Left(ActiveWorkbook.Name, InStrRev(ActiveWorkbook.Name, ".") - 1)

    ' Split data into the specified number of workbooks
    For splitCount = 1 To numberOfSplits
        If startRow <= totalRows Then
            ' Create a new workbook for each split
            Set wb = Workbooks.Add

            ' Copy header to the new workbook
            headerRange.Copy Destination:=wb.Sheets(1).Rows(1)
            
            ' Determine the end row for this split
            If extraRows > 0 Then
                endRow = startRow + rowsPerWorkbook ' One extra row for this split
                extraRows = extraRows - 1 ' Reduce the extra row count
            Else
                endRow = startRow + rowsPerWorkbook - 1
            End If

            ' Ensure we don't exceed total rows
            If endRow > totalRows Then endRow = totalRows

            ' Copy data to the new workbook
            ws.Rows(startRow & ":" & endRow).Copy Destination:=wb.Sheets(1).Rows(2)

            ' Construct the file name for each split workbook
            splitFileName = savePath & fileName & "_part" & splitCount & ".xlsx"

            ' Save the new workbook using the specified path and filename format
            wb.SaveAs fileName:=splitFileName
            wb.Close SaveChanges:=False

            ' Move to the next starting row
            startRow = endRow + 1
            
            ' Reopen the saved workbook so all split files will be visible
            Workbooks.Open fileName:=splitFileName
        End If
    Next splitCount

    MsgBox "Data has been successfully split into " & numberOfSplits & " workbooks, saved, and opened in the specified folder!", vbInformation
End Sub
